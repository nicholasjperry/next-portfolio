{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[23],{\"8T5P\":function(t,e,n){\"use strict\";n.r(e);var r=n(\"HcNT\"),i=n(\"dJMH\"),o=n(\"Aiso\"),s=n.n(o),a=n(\"FdF9\"),c=n(\"mrSG\"),u=n(\"82gj\"),l=n(\"V4dV\"),h=n(\"PuYt\");function d(){var t=!1,e=[],n=new Set,r={subscribe:function(t){return n.add(t),function(){n.delete(t)}},start:function(r,i){if(t){var o=[];return n.forEach((function(t){o.push(Object(l.a)(t,r,{transitionOverride:i}))})),Promise.all(o)}return new Promise((function(t){e.push({animation:[r,i],resolve:t})}))},set:function(e){return Object(u.a)(t,\"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\"),n.forEach((function(t){Object(h.d)(t,e)}))},stop:function(){n.forEach((function(t){Object(l.b)(t)}))},mount:function(){return t=!0,e.forEach((function(t){var e=t.animation,n=t.resolve;r.start.apply(r,Object(c.e)([],Object(c.c)(e))).then(n)})),function(){t=!1,r.stop()}}};return r}var f=n(\"J4/h\");var p=n(\"ATyU\");function b(){return(b=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t}).apply(this,arguments)}var v=new Map,y=new WeakMap,g=0;function w(t){return Object.keys(t).sort().filter((function(e){return void 0!==t[e]})).map((function(e){return e+\"_\"+(\"root\"===e?(n=t.root)?(y.has(n)||(g+=1,y.set(n,g.toString())),y.get(n)):\"0\":t[e]);var n})).toString()}function O(t,e,n){if(void 0===n&&(n={}),!t)return function(){};var r=function(t){var e=w(t),n=v.get(e);if(!n){var r,i=new Map,o=new IntersectionObserver((function(e){e.forEach((function(e){var n,o=e.isIntersecting&&r.some((function(t){return e.intersectionRatio>=t}));t.trackVisibility&&\"undefined\"===typeof e.isVisible&&(e.isVisible=o),null==(n=i.get(e.target))||n.forEach((function(t){t(o,e)}))}))}),t);r=o.thresholds||(Array.isArray(t.threshold)?t.threshold:[t.threshold||0]),n={id:e,observer:o,elements:i},v.set(e,n)}return n}(n),i=r.id,o=r.observer,s=r.elements,a=s.get(t)||[];return s.has(t)||s.set(t,a),a.push(e),o.observe(t),function(){a.splice(a.indexOf(e),1),0===a.length&&(s.delete(t),o.unobserve(t)),0===s.size&&(o.disconnect(),v.delete(i))}}function j(t){return\"function\"!==typeof t.children}var V=function(t){var e,n;function r(e){var n;return(n=t.call(this,e)||this).node=null,n._unobserveCb=null,n.handleNode=function(t){n.node&&(n.unobserve(),t||n.props.triggerOnce||n.props.skip||n.setState({inView:!!n.props.initialInView,entry:void 0})),n.node=t||null,n.observeNode()},n.handleChange=function(t,e){t&&n.props.triggerOnce&&n.unobserve(),j(n.props)||n.setState({inView:t,entry:e}),n.props.onChange&&n.props.onChange(t,e)},n.state={inView:!!e.initialInView,entry:void 0},n}n=t,(e=r).prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n;var i=r.prototype;return i.componentDidUpdate=function(t){t.rootMargin===this.props.rootMargin&&t.root===this.props.root&&t.threshold===this.props.threshold&&t.skip===this.props.skip&&t.trackVisibility===this.props.trackVisibility&&t.delay===this.props.delay||(this.unobserve(),this.observeNode())},i.componentWillUnmount=function(){this.unobserve(),this.node=null},i.observeNode=function(){if(this.node&&!this.props.skip){var t=this.props,e=t.threshold,n=t.root,r=t.rootMargin,i=t.trackVisibility,o=t.delay;this._unobserveCb=O(this.node,this.handleChange,{threshold:e,root:n,rootMargin:r,trackVisibility:i,delay:o})}},i.unobserve=function(){this._unobserveCb&&(this._unobserveCb(),this._unobserveCb=null)},i.render=function(){if(!j(this.props)){var t=this.state,e=t.inView,n=t.entry;return this.props.children({inView:e,entry:n,ref:this.handleNode})}var r=this.props,i=r.children,o=r.as,s=r.tag,c=function(t,e){if(null==t)return{};var n,r,i={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(r,[\"children\",\"as\",\"tag\",\"triggerOnce\",\"threshold\",\"root\",\"rootMargin\",\"onChange\",\"skip\",\"trackVisibility\",\"delay\",\"initialInView\"]);return Object(a.createElement)(o||s||\"div\",b({ref:this.handleNode},c),i)},r}(a.Component);V.displayName=\"InView\",V.defaultProps={threshold:0,triggerOnce:!1,initialInView:!1};e.default=function(t){var e=t.technologies,n=function(t){var e=void 0===t?{}:t,n=e.threshold,r=e.delay,i=e.trackVisibility,o=e.rootMargin,s=e.root,c=e.triggerOnce,u=e.skip,l=e.initialInView,h=Object(a.useRef)(),d=Object(a.useState)({inView:!!l}),f=d[0],p=d[1],b=Object(a.useCallback)((function(t){void 0!==h.current&&(h.current(),h.current=void 0),u||t&&(h.current=O(t,(function(t,e){p({inView:t,entry:e}),e.isIntersecting&&c&&h.current&&(h.current(),h.current=void 0)}),{root:s,rootMargin:o,threshold:n,trackVisibility:i,delay:r}))}),[Array.isArray(n)?n.toString():n,s,o,c,u,i,r]);Object(a.useEffect)((function(){h.current||!f.entry||c||u||p({inView:!!l})}));var v=[b,f.inView,f.entry];return v.ref=v[0],v.inView=v[1],v.entry=v[2],v}(),o=n.ref,c=n.inView,u=function(){var t=Object(f.a)(d);return Object(a.useEffect)(t.mount,[]),t}();return Object(a.useEffect)((function(){c&&u.start({opacity:1},{duration:.5}),c||u.start({opacity:0})}),[c]),Object(r.jsx)(p.a.div,{ref:o,animate:u,children:Object(r.jsx)(i.Box,{sx:{maxWidth:1600,mx:\"auto\",px:3},children:Object(r.jsx)(i.Flex,{justifyContent:\"center\",alignItems:\"center\",flexDirection:{_:\"column\",1:\"column\",2:\"row\",3:\"row\",4:\"row\"},mt:60,sx:{gap:80},children:e&&e.map((function(t){return Object(r.jsx)(i.Box,{width:{_:\"20%\"},children:Object(r.jsx)(s.a,{src:t.avatar.name,width:270,height:175})},t.id)}))})})})}}}]);","map":{"version":3,"sources":["static/chunks/23.85296ce0dc55cfd49923.js"],"names":["window","push","8T5P","module","__webpack_exports__","__webpack_require__","r","jsx_runtime","dist","next_image","image_default","n","compat_module","tslib_es6","hey_listen_es","utils_animation","setters","animationControls","hasMounted","pendingAnimations","subscribers","Set","controls","subscribe","visualElement","add","delete","start","definition","transitionOverride","animations_1","forEach","Object","Promise","all","resolve","animation","set","stop","mount","_a","apply","then","use_constant","motion","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","this","ObserverMap","Map","RootIds","WeakMap","rootId","optionsToId","options","keys","sort","filter","undefined","map","root","has","toString","get","observe","element","callback","_createObserver","id","instance","thresholds","elements","observer","IntersectionObserver","entries","entry","_elements$get","inView","isIntersecting","some","threshold","intersectionRatio","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","splice","indexOf","unobserve","size","disconnect","isPlainChildren","props","children","react_intersection_observer_m_InView","_React$Component","subClass","superClass","InView","_this","node","_unobserveCb","handleNode","triggerOnce","skip","setState","initialInView","observeNode","handleChange","onChange","state","create","constructor","__proto__","_proto","componentDidUpdate","prevProps","rootMargin","delay","componentWillUnmount","_this$props","render","_this$state","ref","_this$props2","as","tag","excluded","sourceKeys","_objectWithoutPropertiesLoose","displayName","defaultProps","_ref","technologies","_useInView","_temp","_React$useState","setRef","current","result","useInView","useAnimation","opacity","duration","div","animate","sx","maxWidth","mx","px","justifyContent","alignItems","flexDirection","_","1","2","3","4","mt","gap","technology","width","a","src","avatar","name","height"],"mappings":"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"},"name":"static/chunks/23.85296ce0dc55cfd49923.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[23],{\n\n/***/ \"8T5P\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/preact/compat/jsx-runtime.mjs\nvar jsx_runtime = __webpack_require__(\"HcNT\");\n\n// EXTERNAL MODULE: ./node_modules/reflexbox/dist/index.js\nvar dist = __webpack_require__(\"dJMH\");\n\n// EXTERNAL MODULE: ./node_modules/next/image.js\nvar next_image = __webpack_require__(\"Aiso\");\nvar image_default = /*#__PURE__*/__webpack_require__.n(next_image);\n\n// EXTERNAL MODULE: ./node_modules/preact/compat/dist/compat.module.js\nvar compat_module = __webpack_require__(\"FdF9\");\n\n// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(\"mrSG\");\n\n// EXTERNAL MODULE: ./node_modules/hey-listen/dist/hey-listen.es.js\nvar hey_listen_es = __webpack_require__(\"82gj\");\n\n// EXTERNAL MODULE: ./node_modules/framer-motion/dist/es/render/utils/animation.js\nvar utils_animation = __webpack_require__(\"V4dV\");\n\n// EXTERNAL MODULE: ./node_modules/framer-motion/dist/es/render/utils/setters.js + 2 modules\nvar setters = __webpack_require__(\"PuYt\");\n\n// CONCATENATED MODULE: ./node_modules/framer-motion/dist/es/animation/animation-controls.js\n\n\n\n\n\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    var hasMounted = false;\n    /**\n     * Pending animations that are started before a component is mounted.\n     * TODO: Remove this as animations should only run in effects\n     */\n    var pendingAnimations = [];\n    /**\n     * A collection of linked component animation controls.\n     */\n    var subscribers = new Set();\n    var controls = {\n        subscribe: function (visualElement) {\n            subscribers.add(visualElement);\n            return function () { return void subscribers.delete(visualElement); };\n        },\n        start: function (definition, transitionOverride) {\n            /**\n             * TODO: We only perform this hasMounted check because in Framer we used to\n             * encourage the ability to start an animation within the render phase. This\n             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n             * we can ditch this.\n             */\n            if (hasMounted) {\n                var animations_1 = [];\n                subscribers.forEach(function (visualElement) {\n                    animations_1.push(Object(utils_animation[\"a\" /* animateVisualElement */])(visualElement, definition, {\n                        transitionOverride: transitionOverride,\n                    }));\n                });\n                return Promise.all(animations_1);\n            }\n            else {\n                return new Promise(function (resolve) {\n                    pendingAnimations.push({\n                        animation: [definition, transitionOverride],\n                        resolve: resolve,\n                    });\n                });\n            }\n        },\n        set: function (definition) {\n            Object(hey_listen_es[\"a\" /* invariant */])(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach(function (visualElement) {\n                Object(setters[\"d\" /* setValues */])(visualElement, definition);\n            });\n        },\n        stop: function () {\n            subscribers.forEach(function (visualElement) {\n                Object(utils_animation[\"b\" /* stopAnimation */])(visualElement);\n            });\n        },\n        mount: function () {\n            hasMounted = true;\n            pendingAnimations.forEach(function (_a) {\n                var animation = _a.animation, resolve = _a.resolve;\n                controls.start.apply(controls, Object(tslib_es6[\"e\" /* __spreadArray */])([], Object(tslib_es6[\"c\" /* __read */])(animation))).then(resolve);\n            });\n            return function () {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\n\n\n// EXTERNAL MODULE: ./node_modules/framer-motion/dist/es/utils/use-constant.js\nvar use_constant = __webpack_require__(\"J4/h\");\n\n// CONCATENATED MODULE: ./node_modules/framer-motion/dist/es/animation/use-animation.js\n\n\n\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * @library\n *\n * ```jsx\n * import * as React from 'react'\n * import { Frame, useAnimation } from 'framer'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <Frame animate={controls} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimation() {\n    var controls = Object(use_constant[\"a\" /* useConstant */])(animationControls);\n    Object(compat_module[\"useEffect\"])(controls.mount, []);\n    return controls;\n}\n\n\n\n// EXTERNAL MODULE: ./node_modules/framer-motion/dist/es/render/dom/motion.js + 108 modules\nvar motion = __webpack_require__(\"ATyU\");\n\n// CONCATENATED MODULE: ./node_modules/react-intersection-observer/react-intersection-observer.m.js\n\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar ObserverMap = new Map();\nvar RootIds = new WeakMap();\nvar rootId = 0;\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(function (key) {\n    return options[key] !== undefined;\n  }).map(function (key) {\n    return key + \"_\" + (key === 'root' ? getRootId(options.root) : options[key]);\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  var id = optionsToId(options);\n  var instance = ObserverMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    var elements = new Map();\n    var thresholds;\n    var observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        var _elements$get;\n\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        var inView = entry.isIntersecting && thresholds.some(function (threshold) {\n          return entry.intersectionRatio >= threshold;\n        }); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(function (callback) {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id: id,\n      observer: observer,\n      elements: elements\n    };\n    ObserverMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (!element) return function () {}; // An observer with the same options can be reused, so lets use this fact\n\n  var _createObserver = createObserver(options),\n      id = _createObserver.id,\n      observer = _createObserver.observer,\n      elements = _createObserver.elements; // Register the callback listener for this element\n\n\n  var callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements[\"delete\"](element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      ObserverMap[\"delete\"](id);\n    }\n  };\n}\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nvar react_intersection_observer_m_InView = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.node = null;\n    _this._unobserveCb = null;\n\n    _this.handleNode = function (node) {\n      if (_this.node) {\n        // Clear the old observer, before we start observing a new element\n        _this.unobserve();\n\n        if (!node && !_this.props.triggerOnce && !_this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          _this.setState({\n            inView: !!_this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    };\n\n    _this.handleChange = function (inView, entry) {\n      if (inView && _this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        _this.unobserve();\n      }\n\n      if (!isPlainChildren(_this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    };\n\n    _this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node || this.props.skip) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin,\n        trackVisibility = _this$props.trackVisibility,\n        delay = _this$props.delay;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin,\n      // @ts-ignore\n      trackVisibility: trackVisibility,\n      // @ts-ignore\n      delay: delay\n    });\n  };\n\n  _proto.unobserve = function unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  };\n\n  _proto.render = function render() {\n    if (!isPlainChildren(this.props)) {\n      var _this$state = this.state,\n          inView = _this$state.inView,\n          entry = _this$state.entry;\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        tag = _this$props2.tag,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"as\", \"tag\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\"]);\n\n    return /*#__PURE__*/Object(compat_module[\"createElement\"])(as || tag || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(compat_module[\"Component\"]);\nreact_intersection_observer_m_InView.displayName = 'InView';\nreact_intersection_observer_m_InView.defaultProps = {\n  threshold: 0,\n  triggerOnce: false,\n  initialInView: false\n};\n\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\nfunction useInView(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      threshold = _ref.threshold,\n      delay = _ref.delay,\n      trackVisibility = _ref.trackVisibility,\n      rootMargin = _ref.rootMargin,\n      root = _ref.root,\n      triggerOnce = _ref.triggerOnce,\n      skip = _ref.skip,\n      initialInView = _ref.initialInView;\n\n  var unobserve = Object(compat_module[\"useRef\"])();\n\n  var _React$useState = Object(compat_module[\"useState\"])({\n    inView: !!initialInView\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = Object(compat_module[\"useCallback\"])(function (node) {\n    if (unobserve.current !== undefined) {\n      unobserve.current();\n      unobserve.current = undefined;\n    } // Skip creating the observer\n\n\n    if (skip) return;\n\n    if (node) {\n      unobserve.current = observe(node, function (inView, entry) {\n        setState({\n          inView: inView,\n          entry: entry\n        });\n\n        if (entry.isIntersecting && triggerOnce && unobserve.current) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve.current();\n          unobserve.current = undefined;\n        }\n      }, {\n        root: root,\n        rootMargin: rootMargin,\n        threshold: threshold,\n        // @ts-ignore\n        trackVisibility: trackVisibility,\n        // @ts-ignore\n        delay: delay\n      });\n    }\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, root, rootMargin, triggerOnce, skip, trackVisibility, delay]);\n  /* eslint-disable-next-line */\n\n  Object(compat_module[\"useEffect\"])(function () {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView\n      });\n    }\n  });\n  var result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\n/* harmony default export */ var react_intersection_observer_m = (react_intersection_observer_m_InView);\n\n//# sourceMappingURL=react-intersection-observer.m.js.map\n\n// CONCATENATED MODULE: ./components/TechnologiesUsed.js\n\n\n\n\n\n\n\nvar TechnologiesUsed_TechnologiesUsed = function TechnologiesUsed(_ref) {\n  var technologies = _ref.technologies;\n\n  var _useInView = useInView(),\n      ref = _useInView.ref,\n      inView = _useInView.inView;\n\n  var animation = useAnimation();\n  Object(compat_module[\"useEffect\"])(function () {\n    if (inView) {\n      animation.start({\n        opacity: 1\n      }, {\n        duration: 0.5\n      });\n    }\n\n    if (!inView) {\n      animation.start({\n        opacity: 0\n      });\n    }\n  }, [inView]);\n  return /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(motion[\"a\" /* motion */].div, {\n    ref: ref,\n    animate: animation,\n    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(dist[\"Box\"], {\n      sx: {\n        maxWidth: 1600,\n        mx: \"auto\",\n        px: 3\n      },\n      children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(dist[\"Flex\"], {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: {\n          _: \"column\",\n          1: \"column\",\n          2: \"row\",\n          3: \"row\",\n          4: \"row\"\n        },\n        mt: 60,\n        sx: {\n          gap: 80\n        },\n        children: technologies && technologies.map(function (technology) {\n          return /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(dist[\"Box\"], {\n            width: {\n              _: \"20%\"\n            },\n            children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(image_default.a, {\n              src: technology.avatar.name,\n              width: 270,\n              height: 175\n            })\n          }, technology.id);\n        })\n      })\n    })\n  });\n};\n\n/* harmony default export */ var components_TechnologiesUsed = __webpack_exports__[\"default\"] = (TechnologiesUsed_TechnologiesUsed);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/nickperry/Desktop/PortfolioWebsite/Next/node_modules/framer-motion/dist/es/animation/animation-controls.js","/Users/nickperry/Desktop/PortfolioWebsite/Next/node_modules/framer-motion/dist/es/animation/use-animation.js","/Users/nickperry/Desktop/PortfolioWebsite/Next/node_modules/react-intersection-observer/react-intersection-observer.m.js","/Users/nickperry/Desktop/PortfolioWebsite/Next/node_modules/next/dist/build/webpack/loaders/next-babel-loader.js??ref--4!/Users/nickperry/Desktop/PortfolioWebsite/Next/components/TechnologiesUsed.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA8C;AACP;AAC4C;AAC5B;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,+CAA+C;AAC/E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,uDAAoB;AAC1D;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,YAAY,0CAAS;AACrB;AACA,gBAAgB,oCAAS;AACzB,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB,gDAAa;AAC7B,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,+CAA+C,0CAAa,KAAK,mCAAM;AACvE,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAE6B;;;;;;AC9E+B;AAC1B;AACqB;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC,OAAO;AACP;AACA,6BAA6B,SAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC,OAAO;AACP;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2CAAW,CAAC,iBAAiB;AAChD,IAAI,kCAAS;AACb;AACA;;AAEwB;;;;;;AC3DmE;;AAE3F;AACA;AACA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,EAAE;;AAEX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK,WAAW;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,sCAAsC;;AAEtC;AACA;AACA;AACA,0CAA0C;;;AAG1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS,SAAS;;AAElB;AACA;AACA,EAAE,EAAE,qBAAqB;AACzB,gBAAgB,IAAI;AACpB,aAAa,0BAA0B,OAAO,GAAG;AACjD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS,SAAS;;AAElB;AACA,4BAA4B,kDAAkD;AAC9E;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,IAAI,oCAAM;AACV;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,sCAAa;AACrC;AACA,KAAK;AACL;;AAEA;AACA,CAAC,CAAC,0BAAS;AACX,oCAAM;AACN,oCAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA,YAAY,qBAAqB;AACjC;AACA,MAAM;AACN;AACA;AACA,iBAAiB,IAAI;AACrB,cAAc,0BAA0B,OAAO,GAAG;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,+BAAM;;AAExB,wBAAwB,iCAAQ;AAChC;AACA,GAAG;AACH;AACA;;AAEA,eAAe,oCAAW;AAC1B;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,EAAE,kCAAS;AACX;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH,mDAAmD;;AAEnD;AACA;AACA;AACA;AACA;;AAEe,sGAAM,EAAC;AACgB;AACtC;;;AChcgD;AACV;AACP;AACG;AACmB;AACG;;AAExD,IAAI,iCAAgB;AACpB;;AAEA,mBAAmB,SAAS;AAC5B;AACA;;AAEA,kBAAkB,YAAY;AAC9B,EAAE,kCAAS;AACX;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH,sBAAsB,0BAAI,CAAC,wBAAM;AACjC;AACA;AACA,2BAA2B,0BAAI,CAAC,WAAG;AACnC;AACA;AACA;AACA;AACA,OAAO;AACP,6BAA6B,0BAAI,CAAC,YAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,8BAA8B,0BAAI,CAAC,WAAG;AACtC;AACA;AACA,aAAa;AACb,mCAAmC,0BAAI,CAAC,eAAK;AAC7C;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEe,kIAAgB,E","file":"x","sourcesContent":["import { __spreadArray, __read } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport { stopAnimation, animateVisualElement } from '../render/utils/animation.js';\nimport { setValues } from '../render/utils/setters.js';\n\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    var hasMounted = false;\n    /**\n     * Pending animations that are started before a component is mounted.\n     * TODO: Remove this as animations should only run in effects\n     */\n    var pendingAnimations = [];\n    /**\n     * A collection of linked component animation controls.\n     */\n    var subscribers = new Set();\n    var controls = {\n        subscribe: function (visualElement) {\n            subscribers.add(visualElement);\n            return function () { return void subscribers.delete(visualElement); };\n        },\n        start: function (definition, transitionOverride) {\n            /**\n             * TODO: We only perform this hasMounted check because in Framer we used to\n             * encourage the ability to start an animation within the render phase. This\n             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n             * we can ditch this.\n             */\n            if (hasMounted) {\n                var animations_1 = [];\n                subscribers.forEach(function (visualElement) {\n                    animations_1.push(animateVisualElement(visualElement, definition, {\n                        transitionOverride: transitionOverride,\n                    }));\n                });\n                return Promise.all(animations_1);\n            }\n            else {\n                return new Promise(function (resolve) {\n                    pendingAnimations.push({\n                        animation: [definition, transitionOverride],\n                        resolve: resolve,\n                    });\n                });\n            }\n        },\n        set: function (definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach(function (visualElement) {\n                setValues(visualElement, definition);\n            });\n        },\n        stop: function () {\n            subscribers.forEach(function (visualElement) {\n                stopAnimation(visualElement);\n            });\n        },\n        mount: function () {\n            hasMounted = true;\n            pendingAnimations.forEach(function (_a) {\n                var animation = _a.animation, resolve = _a.resolve;\n                controls.start.apply(controls, __spreadArray([], __read(animation))).then(resolve);\n            });\n            return function () {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n","import { animationControls } from './animation-controls.js';\nimport { useEffect } from 'react';\nimport { useConstant } from '../utils/use-constant.js';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * @library\n *\n * ```jsx\n * import * as React from 'react'\n * import { Frame, useAnimation } from 'framer'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <Frame animate={controls} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimation() {\n    var controls = useConstant(animationControls);\n    useEffect(controls.mount, []);\n    return controls;\n}\n\nexport { useAnimation };\n","import { createElement, Component, useRef, useState, useCallback, useEffect } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar ObserverMap = new Map();\nvar RootIds = new WeakMap();\nvar rootId = 0;\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(function (key) {\n    return options[key] !== undefined;\n  }).map(function (key) {\n    return key + \"_\" + (key === 'root' ? getRootId(options.root) : options[key]);\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  var id = optionsToId(options);\n  var instance = ObserverMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    var elements = new Map();\n    var thresholds;\n    var observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        var _elements$get;\n\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        var inView = entry.isIntersecting && thresholds.some(function (threshold) {\n          return entry.intersectionRatio >= threshold;\n        }); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(function (callback) {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id: id,\n      observer: observer,\n      elements: elements\n    };\n    ObserverMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (!element) return function () {}; // An observer with the same options can be reused, so lets use this fact\n\n  var _createObserver = createObserver(options),\n      id = _createObserver.id,\n      observer = _createObserver.observer,\n      elements = _createObserver.elements; // Register the callback listener for this element\n\n\n  var callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements[\"delete\"](element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      ObserverMap[\"delete\"](id);\n    }\n  };\n}\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nvar InView = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.node = null;\n    _this._unobserveCb = null;\n\n    _this.handleNode = function (node) {\n      if (_this.node) {\n        // Clear the old observer, before we start observing a new element\n        _this.unobserve();\n\n        if (!node && !_this.props.triggerOnce && !_this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          _this.setState({\n            inView: !!_this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    };\n\n    _this.handleChange = function (inView, entry) {\n      if (inView && _this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        _this.unobserve();\n      }\n\n      if (!isPlainChildren(_this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    };\n\n    _this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node || this.props.skip) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin,\n        trackVisibility = _this$props.trackVisibility,\n        delay = _this$props.delay;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin,\n      // @ts-ignore\n      trackVisibility: trackVisibility,\n      // @ts-ignore\n      delay: delay\n    });\n  };\n\n  _proto.unobserve = function unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  };\n\n  _proto.render = function render() {\n    if (!isPlainChildren(this.props)) {\n      var _this$state = this.state,\n          inView = _this$state.inView,\n          entry = _this$state.entry;\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        tag = _this$props2.tag,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"as\", \"tag\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\"]);\n\n    return /*#__PURE__*/createElement(as || tag || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(Component);\nInView.displayName = 'InView';\nInView.defaultProps = {\n  threshold: 0,\n  triggerOnce: false,\n  initialInView: false\n};\n\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\nfunction useInView(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      threshold = _ref.threshold,\n      delay = _ref.delay,\n      trackVisibility = _ref.trackVisibility,\n      rootMargin = _ref.rootMargin,\n      root = _ref.root,\n      triggerOnce = _ref.triggerOnce,\n      skip = _ref.skip,\n      initialInView = _ref.initialInView;\n\n  var unobserve = useRef();\n\n  var _React$useState = useState({\n    inView: !!initialInView\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = useCallback(function (node) {\n    if (unobserve.current !== undefined) {\n      unobserve.current();\n      unobserve.current = undefined;\n    } // Skip creating the observer\n\n\n    if (skip) return;\n\n    if (node) {\n      unobserve.current = observe(node, function (inView, entry) {\n        setState({\n          inView: inView,\n          entry: entry\n        });\n\n        if (entry.isIntersecting && triggerOnce && unobserve.current) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve.current();\n          unobserve.current = undefined;\n        }\n      }, {\n        root: root,\n        rootMargin: rootMargin,\n        threshold: threshold,\n        // @ts-ignore\n        trackVisibility: trackVisibility,\n        // @ts-ignore\n        delay: delay\n      });\n    }\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, root, rootMargin, triggerOnce, skip, trackVisibility, delay]);\n  /* eslint-disable-next-line */\n\n  useEffect(function () {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView\n      });\n    }\n  });\n  var result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport default InView;\nexport { InView, observe, useInView };\n//# sourceMappingURL=react-intersection-observer.m.js.map\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Flex, Box } from 'reflexbox';\nimport Image from 'next/image';\nimport { useEffect } from 'react';\nimport { motion, useAnimation } from \"framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\n\nvar TechnologiesUsed = function TechnologiesUsed(_ref) {\n  var technologies = _ref.technologies;\n\n  var _useInView = useInView(),\n      ref = _useInView.ref,\n      inView = _useInView.inView;\n\n  var animation = useAnimation();\n  useEffect(function () {\n    if (inView) {\n      animation.start({\n        opacity: 1\n      }, {\n        duration: 0.5\n      });\n    }\n\n    if (!inView) {\n      animation.start({\n        opacity: 0\n      });\n    }\n  }, [inView]);\n  return /*#__PURE__*/_jsx(motion.div, {\n    ref: ref,\n    animate: animation,\n    children: /*#__PURE__*/_jsx(Box, {\n      sx: {\n        maxWidth: 1600,\n        mx: \"auto\",\n        px: 3\n      },\n      children: /*#__PURE__*/_jsx(Flex, {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: {\n          _: \"column\",\n          1: \"column\",\n          2: \"row\",\n          3: \"row\",\n          4: \"row\"\n        },\n        mt: 60,\n        sx: {\n          gap: 80\n        },\n        children: technologies && technologies.map(function (technology) {\n          return /*#__PURE__*/_jsx(Box, {\n            width: {\n              _: \"20%\"\n            },\n            children: /*#__PURE__*/_jsx(Image, {\n              src: technology.avatar.name,\n              width: 270,\n              height: 175\n            })\n          }, technology.id);\n        })\n      })\n    })\n  });\n};\n\nexport default TechnologiesUsed;"]}}