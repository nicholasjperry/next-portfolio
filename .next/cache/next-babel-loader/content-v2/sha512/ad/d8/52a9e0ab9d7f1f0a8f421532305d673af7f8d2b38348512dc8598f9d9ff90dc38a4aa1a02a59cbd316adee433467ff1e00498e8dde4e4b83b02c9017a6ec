{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nickperry/Desktop/PortfolioWebsite/Next/components/Technologies.js\";\nimport { Flex, Box } from 'reflexbox';\nimport { useEffect } from 'react';\nimport { motion, useAnimation } from \"framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\n\nconst TechnologiesUsed = ({\n  technologies\n}) => {\n  const {\n    ref,\n    inView\n  } = useInView();\n  const animation = useAnimation(); // console.log(technologies);\n\n  useEffect(() => {\n    if (inView) {\n      animation.start({\n        opacity: 1\n      }, {\n        duration: 0.5\n      });\n    }\n\n    if (!inView) {\n      animation.start({\n        opacity: 0\n      });\n    }\n  }, [inView]);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    ref: ref,\n    animate: animation,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        maxWidth: 1600,\n        mx: \"auto\",\n        px: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: {\n          _: \"column\",\n          1: \"column\",\n          2: \"row\",\n          3: \"row\",\n          4: \"row\"\n        },\n        mt: 60,\n        sx: {\n          gap: 80\n        },\n        children: technologies.map(technology => {\n          return /*#__PURE__*/_jsxDEV(Box, {\n            width: {\n              _: \"20%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              src: technology.avatar.name,\n              width: 270,\n              height: 175\n            }, technology.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getServerSideProps() {\n  const {\n    API_URL\n  } = process.env;\n  const res = await fetch(`${API_URL}/technologies`);\n  const data = await res.json();\n  return {\n    props: {\n      technologies: data\n    }\n  };\n}\nexport default TechnologiesUsed;","map":{"version":3,"sources":["/Users/nickperry/Desktop/PortfolioWebsite/Next/components/Technologies.js"],"names":["Flex","Box","useEffect","motion","useAnimation","useInView","TechnologiesUsed","technologies","ref","inView","animation","start","opacity","duration","maxWidth","mx","px","_","gap","map","technology","avatar","name","id","getServerSideProps","API_URL","process","env","res","fetch","data","json","props"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,WAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,eAArC;AACA,SAASC,SAAT,QAA0B,6BAA1B;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAE3C,QAAM;AAACC,IAAAA,GAAD;AAAMC,IAAAA;AAAN,MAAgBJ,SAAS,EAA/B;AACA,QAAMK,SAAS,GAAGN,YAAY,EAA9B,CAH2C,CAI3C;;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,MAAJ,EAAY;AACRC,MAAAA,SAAS,CAACC,KAAV,CAAiB;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAjB,EAAgC;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAhC;AACH;;AACD,QAAI,CAACJ,MAAL,EAAa;AACTC,MAAAA,SAAS,CAACC,KAAV,CAAgB;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAhB;AACH;AACJ,GAPQ,EAON,CAACH,MAAD,CAPM,CAAT;AASA,sBACI,QAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,GAAG,EAAED,GAAjB;AAAsB,IAAA,OAAO,EAAEE,SAA/B;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AACDI,QAAAA,QAAQ,EAAE,IADT;AAEDC,QAAAA,EAAE,EAAE,MAFH;AAGDC,QAAAA,EAAE,EAAE;AAHH,OAAT;AAAA,6BAMI,QAAC,IAAD;AAAM,QAAA,cAAc,EAAC,QAArB;AAA8B,QAAA,UAAU,EAAC,QAAzC;AAAkD,QAAA,aAAa,EAAE;AAAEC,UAAAA,CAAC,EAAE,QAAL;AAAe,aAAG,QAAlB;AAA4B,aAAG,KAA/B;AAAsC,aAAG,KAAzC;AAAgD,aAAG;AAAnD,SAAjE;AAA6H,QAAA,EAAE,EAAE,EAAjI;AAAqI,QAAA,EAAE,EAAE;AAAEC,UAAAA,GAAG,EAAE;AAAP,SAAzI;AAAA,kBACKX,YAAY,CAACY,GAAb,CAAiBC,UAAU,IAAI;AAC5B,8BACI,QAAC,GAAD;AAAK,YAAA,KAAK,EAAE;AAAEH,cAAAA,CAAC,EAAC;AAAJ,aAAZ;AAAA,mCACI,QAAC,KAAD;AAA2B,cAAA,GAAG,EAAEG,UAAU,CAACC,MAAX,CAAkBC,IAAlD;AAAwD,cAAA,KAAK,EAAE,GAA/D;AAAoE,cAAA,MAAM,EAAE;AAA5E,eAAYF,UAAU,CAACG,EAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SANA;AADL;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAnCD;;AAqCA,OAAO,eAAeC,kBAAf,GAAoC;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAcC,OAAO,CAACC,GAA5B;AAEA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,eAAZ,CAAvB;AACA,QAAMK,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,SAAO;AACHC,IAAAA,KAAK,EAAE;AACHzB,MAAAA,YAAY,EAAEuB;AADX;AADJ,GAAP;AAKH;AAED,eAAexB,gBAAf","sourcesContent":["import { Flex, Box } from 'reflexbox';\nimport { useEffect } from 'react';\nimport { motion, useAnimation } from \"framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\n\nconst TechnologiesUsed = ({ technologies }) => {\n    \n    const {ref, inView} = useInView();\n    const animation = useAnimation();\n    // console.log(technologies);\n\n    useEffect(() => {\n        if (inView) {\n            animation.start( {opacity: 1 }, {duration: 0.5} );\n        }\n        if (!inView) {\n            animation.start({opacity: 0})\n        }\n    }, [inView]);\n\n    return(\n        <motion.div ref={ref} animate={animation}>\n            <Box sx={{\n                    maxWidth: 1600,\n                    mx: \"auto\",\n                    px: 3\n                }}\n            >\n                <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection={{ _: \"column\", 1: \"column\", 2: \"row\", 3: \"row\", 4: \"row\" }} mt={60} sx={{ gap: 80}}>\n                    {technologies.map(technology => {\n                        return(\n                            <Box width={{ _:\"20%\" }}>\n                                <Image key={technology.id} src={technology.avatar.name} width={270} height={175} />\n                            </Box>\n                        );\n                    })}\n                </Flex>\n            </Box>\n        </motion.div>\n    );\n}\n\nexport async function getServerSideProps() {\n    const { API_URL } = process.env;\n\n    const res = await fetch(`${API_URL}/technologies`);\n    const data = await res.json();\n\n    return {\n        props: {\n            technologies: data\n        }\n    }\n}\n\nexport default TechnologiesUsed;"]},"metadata":{},"sourceType":"module"}