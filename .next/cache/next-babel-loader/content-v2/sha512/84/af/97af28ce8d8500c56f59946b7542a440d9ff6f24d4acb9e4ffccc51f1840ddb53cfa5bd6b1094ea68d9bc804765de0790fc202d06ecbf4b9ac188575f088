{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nickperry/Desktop/PortfolioWebsite/Next/pages/projects/[slug].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport styled from '@emotion/styled';\nimport { Box } from 'reflexbox';\nimport getConfig from 'next/config';\nimport fetch from 'isomorphic-unfetch';\nimport { NextSeo } from 'next-seo';\nexport default function Project({\n  project\n}) {\n  const SEO = {\n    title: `Portfolio Website | ${project.title}`,\n    description: project.description,\n    openGraph: {\n      title: `Portfolio Website | ${project.title}`,\n      description: project.title\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ProjectStyled, {\n    children: [/*#__PURE__*/_jsxDEV(NextSeo, _objectSpread({}, SEO), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      variant: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        as: \"h2\",\n        style: {\n          margin: \"1em\"\n        },\n        my: 40,\n        children: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        maxWidth: 600,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"#09ffac\",\n            margin: \"1em\"\n          },\n          dangerouslySetInnerHTML: {\n            __html: project.description\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\nconst {\n  publicRuntimeConfig\n} = getConfig();\nexport async function getServerSideProps(context) {\n  const {\n    slug\n  } = context.query;\n  const res = await fetch(`${publicRuntimeConfig.API_URL}/projects?slug=${slug}`);\n  const data = await res.json();\n  console.log(slug);\n  return {\n    props: {\n      project: data[0]\n    }\n  };\n}\nconst ProjectStyled = styled.div`\n\n    @keyframes sky-move {\n                    from {background-position: 0 0;}\n                    to {background-position: -100000px 100000px;}\n                }\n\n    .background {\n        width: 100vw;\n        height: 100vh;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        overflow: auto;\n        background-image: url('/images/stars.png');\n        animation: sky-move 12000s infinite;\n    }\n`;","map":{"version":3,"sources":["/Users/nickperry/Desktop/PortfolioWebsite/Next/pages/projects/[slug].js"],"names":["styled","Box","getConfig","fetch","NextSeo","Project","project","SEO","title","description","openGraph","margin","color","__html","publicRuntimeConfig","getServerSideProps","context","slug","query","res","API_URL","data","json","console","log","props","ProjectStyled","div"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,OAAT,QAAwB,UAAxB;AAEA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AAEzC,QAAMC,GAAG,GAAG;AACRC,IAAAA,KAAK,EAAG,uBAAsBF,OAAO,CAACE,KAAM,EADpC;AAERC,IAAAA,WAAW,EAAEH,OAAO,CAACG,WAFb;AAIRC,IAAAA,SAAS,EAAE;AACPF,MAAAA,KAAK,EAAG,uBAAsBF,OAAO,CAACE,KAAM,EADrC;AAEPC,MAAAA,WAAW,EAAEH,OAAO,CAACE;AAFd;AAJH,GAAZ;AAUA,sBACI,QAAC,aAAD;AAAA,4BACI,QAAC,OAAD,oBAAaD,GAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,GAAD;AAAK,MAAA,OAAO,EAAC,WAAb;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,KAAK,EAAE;AAAEI,UAAAA,MAAM,EAAE;AAAV,SAApB;AAAuC,QAAA,EAAE,EAAE,EAA3C;AAAA,kBAAgDL,OAAO,CAACE;AAAxD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,GAAD;AAAK,QAAA,QAAQ,EAAE,GAAf;AAAA,+BACI;AAAG,UAAA,KAAK,EAAE;AAAEI,YAAAA,KAAK,EAAE,SAAT;AAAoBD,YAAAA,MAAM,EAAE;AAA5B,WAAV;AAA+C,UAAA,uBAAuB,EAAE;AAAEE,YAAAA,MAAM,EAAEP,OAAO,CAACG;AAAlB;AAAxE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;AAED,MAAM;AAAEK,EAAAA;AAAF,IAA0BZ,SAAS,EAAzC;AAEA,OAAO,eAAea,kBAAf,CAAkCC,OAAlC,EAA2C;AAE9C,QAAM;AAAEC,IAAAA;AAAF,MAAWD,OAAO,CAACE,KAAzB;AACA,QAAMC,GAAG,GAAG,MAAMhB,KAAK,CAAE,GAAEW,mBAAmB,CAACM,OAAQ,kBAAiBH,IAAK,EAAtD,CAAvB;AACA,QAAMI,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEA,SAAO;AACHQ,IAAAA,KAAK,EAAE;AACHnB,MAAAA,OAAO,EAAEe,IAAI,CAAC,CAAD;AADV;AADJ,GAAP;AAKH;AAED,MAAMK,aAAa,GAAG1B,MAAM,CAAC2B,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA","sourcesContent":["import styled from '@emotion/styled';\nimport { Box } from 'reflexbox';\nimport getConfig from 'next/config';\nimport fetch from 'isomorphic-unfetch';\nimport { NextSeo } from 'next-seo';\n\nexport default function Project({ project }) {\n\n    const SEO = {\n        title: `Portfolio Website | ${project.title}`,\n        description: project.description,\n\n        openGraph: {\n            title: `Portfolio Website | ${project.title}`,\n            description: project.title,\n        }\n    }\n\n    return(\n        <ProjectStyled>\n            <NextSeo {...SEO} />\n            <Box variant=\"container\">\n                <Box as=\"h2\" style={{ margin: \"1em\" }} my={40}>{project.title}</Box>\n                <Box maxWidth={600}>\n                    <p style={{ color: \"#09ffac\", margin: \"1em\" }} dangerouslySetInnerHTML={{ __html: project.description }}></p>\n                </Box>\n            </Box>\n        </ProjectStyled>\n    );\n}\n\nconst { publicRuntimeConfig } = getConfig();\n\nexport async function getServerSideProps(context) {\n\n    const { slug } = context.query;\n    const res = await fetch(`${publicRuntimeConfig.API_URL}/projects?slug=${slug}`);\n    const data = await res.json();\n\n    console.log(slug);\n\n    return {\n        props: {\n            project: data[0]\n        },\n    }\n}\n\nconst ProjectStyled = styled.div`\n\n    @keyframes sky-move {\n                    from {background-position: 0 0;}\n                    to {background-position: -100000px 100000px;}\n                }\n\n    .background {\n        width: 100vw;\n        height: 100vh;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        overflow: auto;\n        background-image: url('/images/stars.png');\n        animation: sky-move 12000s infinite;\n    }\n`"]},"metadata":{},"sourceType":"module"}