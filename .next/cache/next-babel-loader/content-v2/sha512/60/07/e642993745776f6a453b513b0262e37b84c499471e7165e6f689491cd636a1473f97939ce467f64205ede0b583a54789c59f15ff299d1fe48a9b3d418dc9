{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nickperry/Desktop/PortfolioWebsite/Next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nickperry/Desktop/PortfolioWebsite/Next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nickperry/Desktop/PortfolioWebsite/Next/components/VideoPlayer.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport { Video, CloudinaryContext } from \"cloudinary-react\";\n\nvar VideoPlayer = function VideoPlayer(_ref) {\n  _s();\n\n  var projects = _ref.projects;\n  var videoRef = useRef();\n  {\n    projects && projects.map(function (project, index) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Video, {\n          publicId: project.media.public_id,\n          width: \"100%\",\n          controls: true,\n          innerRef: videoRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }, _this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, _this);\n    });\n  }\n};\n\n_s(VideoPlayer, \"0CLVWOVx+8g0ODBjgEMJWUwEryM=\");\n\n_c = VideoPlayer;\nexport function getServerSideProps(_x) {\n  return _getServerSideProps.apply(this, arguments);\n}\n\nfunction _getServerSideProps() {\n  _getServerSideProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var slug, res, data, project;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            slug = context.query.slug;\n            _context.next = 3;\n            return fetch(\"\".concat(publicRuntimeConfig.API_URL, \"/projects?slug=\").concat(slug));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context.sent;\n            project = data[0]; // console.log(slug);\n\n            return _context.abrupt(\"return\", {\n              props: {\n                project: project\n              }\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getServerSideProps.apply(this, arguments);\n}\n\nexport default VideoPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"sources":["/Users/nickperry/Desktop/PortfolioWebsite/Next/components/VideoPlayer.js"],"names":["useRef","Video","CloudinaryContext","VideoPlayer","projects","videoRef","map","project","index","media","public_id","getServerSideProps","context","slug","query","fetch","publicRuntimeConfig","API_URL","res","json","data","props"],"mappings":";;;;;;;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,iBAAhB,QAAyC,kBAAzC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAEpC,MAAMC,QAAQ,GAAGL,MAAM,EAAvB;AAGE;AAACI,IAAAA,QAAQ,IAAIA,QAAQ,CAACE,GAAT,CAAa,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAC1C,0BACI;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,QAAQ,EAAED,OAAO,CAACE,KAAR,CAAcC,SAD5B;AAEI,UAAA,KAAK,EAAC,MAFV;AAGI,UAAA,QAAQ,MAHZ;AAII,UAAA,QAAQ,EAAEL;AAJd;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUG,KAAV;AAAA;AAAA;AAAA;AAAA,eADJ;AAUH,KAXY,CAAZ;AAWE;AAEN,CAlBD;;GAAML,W;;KAAAA,W;AAoBN,gBAAsBQ,kBAAtB;AAAA;AAAA;;;iFAAO,iBAAkCC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEKC,YAAAA,IAFL,GAEcD,OAAO,CAACE,KAFtB,CAEKD,IAFL;AAAA;AAAA,mBAGeE,KAAK,WAAIC,mBAAmB,CAACC,OAAxB,4BAAiDJ,IAAjD,EAHpB;;AAAA;AAGGK,YAAAA,GAHH;AAAA;AAAA,mBAIgBA,GAAG,CAACC,IAAJ,EAJhB;;AAAA;AAIGC,YAAAA,IAJH;AAKGb,YAAAA,OALH,GAKaa,IAAI,CAAC,CAAD,CALjB,EAOH;;AAPG,6CASI;AACHC,cAAAA,KAAK,EAAE;AACHd,gBAAAA,OAAO,EAAPA;AADG;AADJ,aATJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAgBP,eAAeJ,WAAf","sourcesContent":["import { useRef } from \"react\";\nimport { Video, CloudinaryContext } from \"cloudinary-react\";\n\nconst VideoPlayer = ({ projects }) => {\n\n  const videoRef = useRef();\n\n  \n    {projects && projects.map((project, index) => {\n        return (    \n            <div key={index}>\n                <Video\n                    publicId={project.media.public_id}\n                    width=\"100%\"\n                    controls\n                    innerRef={videoRef}\n                />\n            </div>\n        );\n    })}\n    \n};\n\nexport async function getServerSideProps(context) {\n    \n    const { slug } = context.query;\n    const res = await fetch(`${publicRuntimeConfig.API_URL}/projects?slug=${slug}`);\n    const data = await res.json();\n    const project = data[0]\n\n    // console.log(slug);\n\n    return {\n        props: {\n            project\n        },\n    }\n}\n\nexport default VideoPlayer;\n"]},"metadata":{},"sourceType":"module"}